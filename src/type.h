#ifndef __TYPE_H__
#define __TYPE_H__

#ifdef __cplusplus
extern "C" {
#endif
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
}
#if defined(WIN32)
#else
#include <unistd.h>
#endif
typedef float float32_t;

#define OPT_FMT             "f:n:l:s:"
#define SENSOR_NAME_LEN     32
#define LIDAR_SENSOR_ID_MIN 2
#define LIDAR_SENSOR_ID_MAX 37
#define F_NAME_LEN          260
#define ARRAY_NUM(x)        (sizeof(x) / sizeof(*x))
#define sizeofMember(_struct_type, _struct_member)                             \
  (sizeof(((_struct_type*)0)->_struct_member))
#define UNUSED(x) (void)(x)

typedef enum _lidar_cal {
  SENSOR_LIDAR_CAL_X,
  SENSOR_LIDAR_CAL_Y,
  SENSOR_LIDAR_CAL_Z,
  SENSOR_LIDAR_CAL_ANGLE,
  SENSOR_LIDAR_CAL_TILT,
  SENSOR_LIDAR_CAL_MAX
} eLidarCal;

typedef enum _mode {
  MODE_NONE,
  MODE_ONLINE,
  MODE_OFFLINE,
  MODE_REMOTE_DISPLAY,
} eMode;

typedef enum _dev_mode {
  DEVMODE_NONE,
  DEVMODE_CALIBRATION,
  DEVMODE_AUTO_CALIBRATION,
  DEVMODE_LIM,
} eDevMode;

typedef enum SensorId {
  SENSOR_ID_NONE = 0,
  SENSOR_ID_LIDAR_START,
  SENSOR_ID_LIDAR_OS0_64,
  SENSOR_ID_LIDAR_OS1_16,
  SENSOR_ID_LIDAR_OS1_32,
  SENSOR_ID_LIDAR_OS1_64,
  SENSOR_ID_LIDAR_OS2_128,
  SENSOR_ID_LIDAR_PUCK,
  SENSOR_ID_LIDAR_ALPHA_PUCK,
  SENSOR_ID_LIDAR_HDL_32,
  SENSOR_ID_LIDAR_VLP_32,
  SENSOR_ID_LIDAR_VELARRAY,
  SENSOR_ID_LIDAR_VELARRAY_RIGHT,
  SENSOR_ID_LIDAR_VELARRAY_LEFT,
  SENSOR_ID_LIDAR_AEYE,
  SENSOR_ID_LIDAR_INNOVIZ_ONE,
  SENSOR_ID_LIDAR_INNOVIZ_PRO,
  SENSOR_ID_LIDAR_PANDARXT_16,
  SENSOR_ID_LIDAR_PANDARXT_32,
  SENSOR_ID_LIDAR_PANDARQT_PREV,
  SENSOR_ID_LIDAR_PANDARQT,
  SENSOR_ID_LIDAR_PANDAR_40P,
  SENSOR_ID_LIDAR_PANDAR_40M,
  SENSOR_ID_LIDAR_PANDAR_64,
  SENSOR_ID_LIDAR_LIVOX,
  SENSOR_ID_LIDAR_LIVOX_HORIZON,
  SENSOR_ID_LIDAR_LIVOX_AVIA,
  SENSOR_ID_LIDAR_LEISHEN_LS32,
  SENSOR_ID_LIDAR_LIVOX_TELE15,
  SENSOR_ID_LIDAR_LIVOX_HAP,
  SENSOR_ID_LIDAR_LIVOX_MID_360,
  SENSOR_ID_LIDAR_LEISHEN_LS64,
  SENSOR_ID_LIDAR_NEXTEP_NX64W,
  SENSOR_ID_LIDAR_NEXTEP_NX128W,
  SENSOR_ID_LIDAR_OPSYS_SP3C,
  SENSOR_ID_LIDAR_LEISHEN_CH128S1,
  SENSOR_ID_LIDAR_LEISHEN_CH32R,
  SENSOR_ID_LIDAR_INNO_FALCON,
  SENSOR_ID_LIDAR_END,

  SENSOR_ID_VEHICLE_START = 200,
  SENSOR_ID_VEHICLE_SANTAFE,
  SENSOR_ID_VEHICLE_SONATA_WHITE,
  SENSOR_ID_VEHICLE_SONATA_BLACK,
  SENSOR_ID_VEHICLE_MOBIS,
  SENSOR_ID_VEHICLE_HYUNDAI_RENT,
  SENSOR_ID_VEHICLE_SONATA_USA,
  SENSOR_ID_VEHICLE_END,

  SENSOR_ID_RADAR_START = 300,
  SENSOR_ID_RADAR_1,
  SENSOR_ID_RADAR_2,
  SENSOR_ID_RADAR_END,

  SENSOR_ID_MOBILEYE_START = 400,
  SENSOR_ID_MOBILEYE,
  SENSOR_ID_MOBILEYE_END,

  SENSOR_ID_STRADVISION_START = 500,
  SENSOR_ID_STRADVISION,
  SENSOR_ID_STRADVISION_END,

  SENSOR_ID_GPS_START = 600,
  SENSOR_ID_GPS,
  SENSOR_ID_GPS_END,

  SENSOR_ID_INS_START = 700,
  SENSOR_ID_INS,
  SENSOR_ID_INS_END,

  SENSOR_ID_IMU_START = 800,
  SENSOR_ID_IMU_OS1_64,
  SENSOR_ID_IMU_OS2_128,
  SENSOR_ID_IMU_HONEYWELL,
  SENSOR_ID_IMU_MWAHRS_V1,
  SENSOR_ID_IMU_END,

  SENSOR_ID_IMAGE_START = 900,
  SENSOR_ID_IMAGE_1,
  SENSOR_ID_IMAGE_2,
  SENSOR_ID_IMAGE_3,
  SENSOR_ID_IMAGE_4,
  SENSOR_ID_IMAGE_END,

  SENSOR_ID_GENERAL_START = 1000,
  SENSOR_ID_LOG,
  SENSOR_ID_GENERAL_END,

  SENSOR_ID_LIM,
} eSensorId;
#endif